import { FC, useEffect, useState } from "react";
import cn from "classnames";
import { ArrowsOutSimple, PlusCircle } from "@phosphor-icons/react";
import ApexChart from "react-apexcharts";
import dayjs from "dayjs";

const Chart: FC = () => {
  type filter = "1d" | "3d" | "1w" | "1m" | "6m" | "1y" | "max";
  const filters = ["1d", "3d", "1w", "1m", "6m", "1y", "max"];
  const [selectedFilter, setSelectedFilter] = useState<filter>("1w");
  const now = dayjs().valueOf();

  const chartSeries = [
    {
      data: [
        [1704067200000, 120.15],
        [1704153600000, 119.8],
        [1704240000000, 121.45],
        [1704326400000, 122.9],
        [1704412800000, 121.3],
        [1704499200000, 119.7],
        [1704585600000, 121.1],
        [1704672000000, 122.6],
        [1704758400000, 124.3],
        [1704844800000, 123.45],
        [1704931200000, 124.9],
        [1705017600000, 126.1],
        [1705104000000, 125.5],
        [1705190400000, 127.0],
        [1705276800000, 128.3],
        [1705363200000, 127.1],
        [1705449600000, 129.6],
        [1705536000000, 130.8],
        [1705622400000, 129.5],
        [1705708800000, 131.9],
        [1705795200000, 133.2],
        [1705881600000, 132.1],
        [1705968000000, 130.6],
        [1706054400000, 129.4],
        [1706140800000, 131.0],
        [1706227200000, 132.5],
        [1706313600000, 131.2],
        [1706400000000, 133.6],
        [1706486400000, 134.9],
        [1706572800000, 136.3],
        [1706659200000, 135.2],
        [1706745600000, 137.6],
        [1706832000000, 139.0],
        [1706918400000, 137.8],
        [1707004800000, 136.5],
        [1707091200000, 135.2],
        [1707177600000, 137.6],
        [1707264000000, 139.2],
        [1707350400000, 140.9],
        [1707436800000, 139.4],
        [1707523200000, 138.1],
        [1707609600000, 139.7],
        [1707696000000, 141.3],
        [1707782400000, 143.0],
        [1707868800000, 141.6],
        [1707955200000, 140.1],
        [1708041600000, 138.5],
        [1708128000000, 137.0],
        [1708214400000, 135.4],
        [1708300800000, 133.9],
        [1708387200000, 132.5],
        [1708473600000, 134.1],
        [1708560000000, 135.7],
        [1708646400000, 137.3],
        [1708732800000, 135.9],
        [1708819200000, 137.5],
        [1708905600000, 139.2],
        [1708992000000, 137.8],
        [1709078400000, 139.4],
        [1709164800000, 141.1],
        [1709251200000, 139.7],
        [1709337600000, 138.3],
        [1709424000000, 140.0],
        [1709510400000, 141.7],
        [1709596800000, 143.4],
        [1709683200000, 145.1],
        [1709769600000, 143.7],
        [1709856000000, 142.3],
        [1709942400000, 144.0],
        [1710028800000, 145.7],
        [1710115200000, 144.3],
        [1710201600000, 143.0],
        [1710288000000, 141.7],
        [1710374400000, 140.3],
        [1710460800000, 139.0],
        [1710547200000, 137.7],
        [1710633600000, 136.3],
        [1710720000000, 138.0],
        [1710806400000, 139.7],
        [1710892800000, 141.4],
        [1710979200000, 140.1],
        [1711065600000, 141.8],
        [1711152000000, 143.5],
        [1711238400000, 142.2],
        [1711324800000, 140.9],
        [1711411200000, 139.6],
        [1711497600000, 138.3],
        [1711584000000, 137.0],
        [1711670400000, 138.7],
        [1711756800000, 140.4],
        [1711843200000, 142.1],
        [1711929600000, 143.8],
        [1712016000000, 145.5],
        [1712102400000, 147.2],
        [1712188800000, 145.9],
        [1712275200000, 144.6],
        [1712361600000, 143.3],
        [1712448000000, 142.0],
        [1712534400000, 143.7],
        [1712620800000, 145.4],
        [1712707200000, 147.1],
        [1712793600000, 148.8],
        [1712880000000, 147.5],
        [1712966400000, 146.2],
        [1713052800000, 147.9],
        [1713139200000, 149.6],
        [1713225600000, 148.3],
        [1713312000000, 150.0],
        [1713398400000, 151.7],
        [1713484800000, 150.4],
        [1713571200000, 149.1],
        [1713657600000, 147.8],
        [1713744000000, 146.5],
        [1713830400000, 145.2],
        [1713916800000, 143.9],
        [1714003200000, 142.6],
        [1714089600000, 141.3],
        [1714176000000, 140.0],
        [1714262400000, 138.7],
        [1714348800000, 137.4],
        [1714435200000, 136.1],
        [1714521600000, 134.8],
        [1714608000000, 133.5],
        [1714694400000, 132.2],
        [1714780800000, 130.9],
        [1714867200000, 129.6],
        [1714953600000, 128.3],
        [1715040000000, 127.0],
        [1715126400000, 125.7],
        [1715212800000, 124.4],
        [1715299200000, 126.1],
        [1715385600000, 127.8],
        [1715472000000, 129.5],
        [1715558400000, 128.2],
        [1715644800000, 129.9],
        [1715731200000, 131.6],
        [1715817600000, 133.3],
        [1715904000000, 135.0],
        [1715990400000, 133.7],
        [1716076800000, 135.4],
        [1716163200000, 137.1],
        [1716249600000, 135.8],
        [1716336000000, 137.5],
        [1716422400000, 139.2],
        [1716508800000, 140.9],
        [1716595200000, 142.6],
        [1716681600000, 141.3],
        [1716768000000, 140.0],
        [1716854400000, 141.7],
        [1716940800000, 143.4],
        [1717027200000, 145.1],
        [1717113600000, 143.8],
        [1717200000000, 145.5],
        [1717286400000, 147.2],
        [1717372800000, 148.9],
        [1717459200000, 150.6],
        [1717545600000, 149.3],
        [1717632000000, 148.0],
        [1717718400000, 146.7],
        [1717804800000, 145.4],
        [1717891200000, 144.1],
        [1717977600000, 142.8],
        [1718064000000, 141.5],
        [1718150400000, 140.2],
        [1718236800000, 138.9],
        [1718323200000, 137.6],
        [1718409600000, 136.3],
        [1718496000000, 135.0],
        [1718582400000, 133.7],
        [1718668800000, 132.4],
        [1718755200000, 131.1],
        [1718841600000, 129.8],
        [1718928000000, 128.5],
        [1719014400000, 127.2],
        [1719100800000, 125.9],
        [1719187200000, 124.6],
        [1719273600000, 123.3],
        [1719360000000, 122.0],
        [1719446400000, 120.7],
        [1719532800000, 119.4],
        [1719619200000, 118.1],
        [1719705600000, 116.8],
        [1719792000000, 115.5],
        [1719878400000, 114.2],
        [1719964800000, 112.9],
        [1720051200000, 111.6],
        [1720137600000, 110.3],
        [1720224000000, 109.0],
        [1720310400000, 107.7],
        [1720396800000, 106.4],
        [1720483200000, 105.1],
        [1720569600000, 103.8],
        [1720656000000, 102.5],
        [1720742400000, 101.2],
        [1720828800000, 99.9],
        [1720915200000, 98.6],
        [1721001600000, 97.3],
        [1721088000000, 96.0],
        [1721174400000, 94.7],
        [1721260800000, 93.4],
        [1721347200000, 92.1],
        [1721433600000, 90.8],
        [1721520000000, 89.5],
        [1721606400000, 88.2],
        [1721692800000, 86.9],
        [1721779200000, 85.6],
        [1721865600000, 84.3],
        [1721952000000, 83.0],
        [1722038400000, 81.7],
        [1722124800000, 80.4],
        [1722211200000, 79.1],
        [1722297600000, 77.8],
        [1722384000000, 76.5],
        [1722470400000, 75.2],
        [1722556800000, 73.9],
        [1722643200000, 72.6],
        [1722729600000, 71.3],
        [1722816000000, 70.0],
        [1722902400000, 68.7],
        [1722988800000, 67.4],
        [1723075200000, 66.1],
        [1723161600000, 64.8],
        [1723248000000, 63.5],
        [1723334400000, 62.2],
        [1723420800000, 60.9],
        [1723507200000, 59.6],
        [1723593600000, 58.3],
        [1723680000000, 57.0],
        [1723766400000, 55.7],
        [1723852800000, 54.4],
        [1723939200000, 53.1],
        [1724025600000, 51.8],
        [1724112000000, 50.5],
        [1724198400000, 49.2],
        [1724284800000, 47.9],
        [1724371200000, 46.6],
        [1724457600000, 45.3],
        [1724544000000, 44.0],
        [1724630400000, 42.7],
        [1724716800000, 41.4],
        [1724803200000, 40.1],
        [1724889600000, 38.8],
        [1724976000000, 37.5],
        [1725062400000, 36.2],
        [1725148800000, 34.9],
        [1725235200000, 33.6],
        [1725321600000, 32.3],
        [1725408000000, 31.0],
        [1725494400000, 29.7],
        [1725580800000, 28.4],
        [1725667200000, 27.1],
        [1725753600000, 25.8],
        [1725840000000, 24.5],
        [1725926400000, 23.2],
        [1726012800000, 21.9],
        [1726099200000, 20.6],
        [1726185600000, 19.3],
        [1726272000000, 18.0],
        [1726358400000, 16.7],
        [1726444800000, 15.4],
        [1726531200000, 14.1],
        [1726617600000, 12.8],
        [1726704000000, 11.5],
        [1726790400000, 10.2],
        [1726876800000, 8.9],
        [1726963200000, 7.6],
        [1727049600000, 6.3],
        [1727136000000, 5.0],
        [1727222400000, 3.7],
        [1727308800000, 2.4],
        [1727395200000, 1.1],
      ],
    },
  ];

  const chartOptions = {
    chart: {
      id: "area-datetime",
      type: "area",
      height: 500,
      zoom: {
        autoScaleYaxis: true,
      },
      toolbar: {
        show: false,
      },
    },
    annotations: {
      yaxis: [
        {
          y: chartSeries[0].data[0][chartSeries[0].data[0].length - 1],
          borderColor: "#999",
          label: {
            show: true,
            text: "Support",
            style: {
              color: "#fff",
              background: "#4b40ee",
            },
          },
        },
      ],
    },
    dataLabels: {
      enabled: false,
    },
    markers: {
      size: 0,
      style: "hollow",
    },
    xaxis: {
      type: "datetime",
      min: new Date("01 Mar 2012").getTime(),
      tickAmount: 6,
    },
    tooltip: {
      x: {
        format: "dd MMM yyyy",
      },
    },
    fill: {
      type: "gradient",
      gradient: {
        shadeIntensity: 1,
        opacityFrom: 0.7,
        opacityTo: 0.9,
        stops: [0, 90, 100],
      },
    },
    colors: ["#4b40ee"],
  };

  console.log(
    "abhishek",
    chartSeries[0].data[0][chartSeries[0].data[0].length - 1]
  );

  useEffect(() => {
    switch (selectedFilter) {
      case "1d":
        ApexCharts.exec(
          "area-datetime",
          "zoomX",
          dayjs(now).subtract(1, "day").valueOf(),
          now
        );
        break;
      case "3d":
        ApexCharts.exec(
          "area-datetime",
          "zoomX",
          dayjs(now).subtract(3, "day").valueOf(),
          now
        );
        break;
      case "1w":
        ApexCharts.exec(
          "area-datetime",
          "zoomX",
          dayjs(now).subtract(1, "week").valueOf(),
          now
        );
        break;
      case "1m":
        ApexCharts.exec(
          "area-datetime",
          "zoomX",
          dayjs(now).subtract(1, "month").valueOf(),
          now
        );
        break;
      case "6m":
        ApexCharts.exec(
          "area-datetime",
          "zoomX",
          dayjs(now).subtract(6, "month").valueOf(),
          now
        );
        break;
      case "1y":
        ApexCharts.exec(
          "area-datetime",
          "zoomX",
          dayjs(now).subtract(1, "year").valueOf(),
          now
        );
        break;
      default:
        ApexCharts.exec(
          "area-datetime",
          "zoomX",
          chartSeries[0].data[0][0],
          now
        );
    }
  }, [selectedFilter]);

  const handleFilter = (filter: filter) => {
    setSelectedFilter(filter);
  };

  return (
    <div>
      <div className="flex items-center gap-x-4 gap-y-5 select-none flex-wrap">
        <div className="flex items-center gap-x-1 cursor-pointer">
          <ArrowsOutSimple size={24} color="#4b5563" />{" "}
          <p className="text-xl text-gray-600">FullScreen</p>
        </div>
        <div className="flex items-center gap-x-1 cursor-pointer">
          <PlusCircle size={24} color="#4b5563" />{" "}
          <p className="text-xl text-gray-600">Compare</p>
        </div>

        <div className="flex items-center ml-auto gap-x-1">
          {filters.map((filter) => (
            <div
              key={filter}
              className={cn(
                "cursor-pointer text-xl px-3 py-1 text-gray-600 rounded-md",
                {
                  "bg-purple !text-white": selectedFilter === filter,
                }
              )}
              onClick={() => handleFilter(filter as filter)}
            >
              {filter}
            </div>
          ))}
        </div>
      </div>
      <ApexChart
        type="area"
        height={450}
        options={chartOptions}
        series={chartSeries}
      />
    </div>
  );
};

export default Chart;
